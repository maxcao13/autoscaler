# Image pull secrets.
imagePullSecrets: []

# Override the name of the chart.
nameOverride:

# Override the full name of the chart.
fullnameOverride:

# Labels to add to all chart resources.
commonLabels: {}

rbac:
  # If `true`, create `ClusterRole` & `ClusterRoleBinding` resources to enable access to the Kubernetes API.
  create: true

admissionController:
  enabled: true
  image:
    # Image repository for the Admission Controller default container.
    repository: registry.k8s.io/autoscaling/vpa-admission-controller
    # Image tag for the Admission Controller default container; this will default to `.Chart.AppVersion` if not set
    tag:
    # Image pull policy for the Admission Controller default container.
    pullPolicy: IfNotPresent

  serviceAccount:
    # If `true`, create a new `ServiceAccount` for the Admission Controller.
    create: true
    # Labels to add to the Admission Controller service account.
    labels: {}
    # Annotations to add to the Admission Controller service account.
    annotations: {}

  service:
    name: vpa-webhook
    # Annotations to add to the Admission Controller service.
    annotations: {}
    ports:
      - port: 443
        protocol: TCP
        targetPort: 8000

  # Number of Admission Controller replicas to create.
  replicas: 1

  # Labels to add to the Admission Controller pod.
  podLabels: {}

  # Annotations to add to the Admission Controller pod.
  podAnnotations: {}

  # Additional environment variables for the Admission Controller default container.
  extraEnv: []

  # Additional args for the Admission Controller default container.
  extraArgs: []

  # Resources for the Admission Controller default container.
  resources:
    limits:
      cpu: 200m
      memory: 500Mi
    requests:
      cpu: 50m
      memory: 200Mi

  # Node selector labels for scheduling the Admission Controller.
  nodeSelector: {}

  tls:
    secretName: vpa-tls-certs
    caCert: ""
    cert: ""
    key: ""
    existingSecret: ""

  volumes:
    - name: tls-certs
      secret:
        defaultMode: 420
        secretName: vpa-tls-certs

  volumeMounts:
    - name: tls-certs
      mountPath: /etc/tls-certs
      readOnly: true

recommender:
  enabled: true
  image:
    # Image repository for the Recommender default container.
    repository: registry.k8s.io/autoscaling/vpa-recommender
    # Image tag for the Recommender default container; this will default to `.Chart.AppVersion` if not set
    tag:
    # Image pull policy for the Recommender default container.
    pullPolicy: IfNotPresent

  serviceAccount:
    # If `true`, create a new `ServiceAccount` for the Recommender.
    create: true
    # Labels to add to the Recommender service account.
    labels: {}
    # Annotations to add to the Recommender service account.
    annotations: {}

  # Number of Recommender replicas to create.
  replicas: 1

  # Labels to add to the Recommender pod.
  podLabels: {}

  # Annotations to add to the Recommender pod.
  podAnnotations: {}

  # Additional environment variables for the Recommender default container.
  extraEnv: []

  # Additional args for the Recommender default container.
  extraArgs: []

  # Resources for the Recommender default container.
  resources:
    limits:
      cpu: 200m
      memory: 1000Mi
    requests:
      cpu: 50m
      memory: 500Mi

  # Node selector labels for scheduling the Recommender.
  nodeSelector: {}

  # Affinity rules for scheduling the Recommender.
  affinity: {}

  # Tolerations for scheduling the Recommender.
  tolerations: []

  # PodDisruptionBudget for the Recommender.
  podDisruptionBudget:
    # If `true`, create a PodDisruptionBudget for the Recommender.
    enabled: false
    # Minimum available pods.
    minAvailable: 1
    # Maximum unavailable pods.
    maxUnavailable:
